{"title":"Analyzing Book Sales","markdown":{"yaml":{"title":"Analyzing Book Sales","author":"Castory Munishi","format":{"html":{"theme":"united","code-fold":true,"code-tools":true}},"date":"10/25/2022","editor":"visual","toc":true},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\nLike in [book reviews](../book_reviews/book_reviews.qmd) project, we are taking on the role of an analyst for a book company. The company has provided us more data on some of its 2019 book sales, and it wants us to extract some usable knowledge from it. It launched a new program encouraging customers to buy more books on July 1st, 2019, and it wants to know if this new program was successful at increasing sales and improving review quality. As the analyst, this will be your job to figure out for the guided project.\n\n## Preliminary checks\n\n-   Importing the dataset\n-   Checking the dimensions\n-   Reflecting on the column names\n\n```{r}\n#| message: false\npacman::p_load(\n  readr,\n  dplyr,\n  stringr,\n  purrr,\n  magrittr,\n  lubridate\n)\n\nds <- read_csv(\"sales2019.csv\")\n\ndim(ds)\ncolnames(ds)\n```\n\n-   Printing data types using a for loop\n\n```{r}\n for (i in colnames(ds)) {\n   print(typeof(ds[[i]]))\n   \n }\n```\n\n-   Counting missing values\n\n```{r}\nds.na <- is.na(ds)\nsummary(ds.na)\n```\n\nWe found that there were two columns missing data. The first is the user_submitted_review column, which contains the review left by the customer. The second is total_purchased, which represents how many books were purchased by the customer.\n\nFor this project, we're going to handle these two columns differently. The reason for this is due to the fact that we care a lot more about the total_purchased column, because it contains the actual information on book sales. We want to determine if the company's new program helped to improve sales. In order to keep as much information on sales as possible, we're going to take a different approach to handling missing data.\n\n## Task One\n\n1.  Remove all rows in the dataset that have an NA value for the user_submitted_review column.\n\n-   Use a combination of the `filter()` function and the `is.na()` function to remove these rows\n-   Record how many rows were removed, and make a note of this to yourself.\n\n2.  Using the remaining rows that have data, calculate the average number of books purchased on an order.\n    -   You can use the `mean()` function to calculate this value.\n3.  Fill all of the missing values in total_purchased with the average value you calculated in step 2. We can do this through the following:\n\n-   Use the `mutate()` function to create a new column based off of the total_purchased column.\n-   Use the `if_else()` function to detect if a row in total_purchased is NA or not.\n-   If the row is NA, then the correponding row in the new column should be the average from 2)\n-   If the row is not NA, then it should contain the same value as the corresponding row in total_purchased.\n-   The end result will be a column that is like total_purchased, but all of the missing values will be filled in!\n\n## Solution\n\n```{r}\n#| echo: true\noriginal <- nrow(ds)\nds %<>%\n  filter(!is.na(user_submitted_review))\nnew <- nrow(ds)\n```\n\nThe number of rows removed is `r original-new`\n\nThe average number of books purchased in an order is `r mean(ds$total_purchased, na.rm=T)`\n\nFilling the missing on total_purchased using the mean above\n\n```{r}\nds %<>%\n  mutate(total_purchased=if_else(is.na(total_purchased),3.99,total_purchased))\n```\n\n## Task Two\n\n1.  Examine the unique sentences that are present in in user_submitted_review.\n\n-   Look at each of these reviews and see if you can detect specific words or phrases that help indicate if the review is positive or not.\n-   For example, a word like \"good\" or \"great\" can help indicate that a review is positive. A phrase like \"not recommended\" can help indicate that a review is not positive.\n\n2.  Create a function that takes in a sentence (think: a value from user_submitted_review) and returns a value indicating if the review is positive or not.\n\n-   We will leave it up to you to design your function, but it must perform this essential role.\n\n-   Recall that you can use the `str_detect()` function to check if a string contains a particular substring\n\n-   Combining the `str_detect()` function with a control flow function like case_when() would be a great way to approach this problem.\n\n-   Create a new column in the dataset that indicates whether or not the review in a given row is positive or not.\n\nChecking unique values for user_submitted_review\n\n```{r}\n#| echo: true\nunique(ds$user_submitted_review)\n```\n\nGrading reviews to positive and negative\n\n```{r}\nds %<>%\n  mutate(\n    review_class= case_when(str_detect(user_submitted_review,\"it was okay\")~\"Positive\",\n                            str_detect(user_submitted_review,\"Awesome!\")~\"Positive\",\n                             str_detect(user_submitted_review,\"Hated it\")~\"Negative\",\n                            str_detect(user_submitted_review,\"Never read a better book\")~\"Positive\",\n                           str_detect(user_submitted_review,\"OK\")~\"Positive\",\n                           str_detect(user_submitted_review,\"The author's other books were better\")~\"Negative\",\n                            str_detect(user_submitted_review,\"A lot of material was not needed\")~\"Negative\",\n                            str_detect(user_submitted_review,\"Would not recommend\")~\"Negative\",\n                            str_detect(user_submitted_review,\"I learned a lot\")~\"Positive\",\n                            \n                            \n                            TRUE ~ user_submitted_review\n                            ))\n```\n\n\n## Task Three\n\n1. Perform the proper conversion of the date column, so that it actually represents a date and time. \n\n2. Create a new grouping column using the `mutate()` function that will help distinguish between sales that happen before July 1, 2019 and sales that happen after this date.\n\n3. Create a summary table that compares the number of books purchased before July 1, 2019 to after.\n\n> After creating the table, judge whether or not the program was actually effective in terms of increasing the number of books sold.\n\n\n```{r}\n#| echo: true\nds %<>%\n  mutate(date=mdy(date)) %>%\n  mutate(bef_jul=if_else(date < as.Date(\"2019-07-01\"),\"Before July\",\"After July\"))\n```\n\n```{r}\nsales <- ds %>%\n  group_by(bef_jul) %>%\n  summarise(count=n()) %>%\n  summarise(bef_jul,count,prop=count/sum(count)*100)\nknitr::kable(sales)\n```\n\nIn data analysis, it's common to have several subgroups that you want to compare. In the last step, we just compared sales that were before and after July 1, 2019. It's possible that individual customers responded better to the program and bought more books in response to the program. Or, it could have been businesses that bought more books. In order to explore this sub-analysis, we also need to divide the sales before and after July 1, 2019 into sales that were for individuals versus businesses. \n\n\n## Task Four\n\n\n1. Perform the same analysis that you did in the last step but add in the customer_type column to further subdivide the groups.\n2. Examine the results of the analysis and write about your observations. Does the program still seem to have an effect on increasing sales? Did it have a different effect for individuals versus businesses?\n\n```{r}\nsales <- ds %>%\n  group_by(customer_type,bef_jul) %>%\n  summarise(count=n()) %>%\n  summarise(customer_type,bef_jul,count,prop=count/sum(count)*100)\nknitr::kable(sales)\n```\n\n## Task Five\n\n + Create another summary table that compares the number of positive reviews before and after July 1, 2019.\n\n     + Does it seem that review sentiment improved after the program was created? Or did it get worse?\n\n```{r}\nreviews <- ds %>%\n  group_by(bef_jul,review_class) %>%\n  summarise(count=n()) %>%\n  summarise(bef_jul,review_class,count,prop=count/sum(count)*100)\nknitr::kable(reviews)\n```","srcMarkdownNoYaml":"\n\n## Introduction\n\nLike in [book reviews](../book_reviews/book_reviews.qmd) project, we are taking on the role of an analyst for a book company. The company has provided us more data on some of its 2019 book sales, and it wants us to extract some usable knowledge from it. It launched a new program encouraging customers to buy more books on July 1st, 2019, and it wants to know if this new program was successful at increasing sales and improving review quality. As the analyst, this will be your job to figure out for the guided project.\n\n## Preliminary checks\n\n-   Importing the dataset\n-   Checking the dimensions\n-   Reflecting on the column names\n\n```{r}\n#| message: false\npacman::p_load(\n  readr,\n  dplyr,\n  stringr,\n  purrr,\n  magrittr,\n  lubridate\n)\n\nds <- read_csv(\"sales2019.csv\")\n\ndim(ds)\ncolnames(ds)\n```\n\n-   Printing data types using a for loop\n\n```{r}\n for (i in colnames(ds)) {\n   print(typeof(ds[[i]]))\n   \n }\n```\n\n-   Counting missing values\n\n```{r}\nds.na <- is.na(ds)\nsummary(ds.na)\n```\n\nWe found that there were two columns missing data. The first is the user_submitted_review column, which contains the review left by the customer. The second is total_purchased, which represents how many books were purchased by the customer.\n\nFor this project, we're going to handle these two columns differently. The reason for this is due to the fact that we care a lot more about the total_purchased column, because it contains the actual information on book sales. We want to determine if the company's new program helped to improve sales. In order to keep as much information on sales as possible, we're going to take a different approach to handling missing data.\n\n## Task One\n\n1.  Remove all rows in the dataset that have an NA value for the user_submitted_review column.\n\n-   Use a combination of the `filter()` function and the `is.na()` function to remove these rows\n-   Record how many rows were removed, and make a note of this to yourself.\n\n2.  Using the remaining rows that have data, calculate the average number of books purchased on an order.\n    -   You can use the `mean()` function to calculate this value.\n3.  Fill all of the missing values in total_purchased with the average value you calculated in step 2. We can do this through the following:\n\n-   Use the `mutate()` function to create a new column based off of the total_purchased column.\n-   Use the `if_else()` function to detect if a row in total_purchased is NA or not.\n-   If the row is NA, then the correponding row in the new column should be the average from 2)\n-   If the row is not NA, then it should contain the same value as the corresponding row in total_purchased.\n-   The end result will be a column that is like total_purchased, but all of the missing values will be filled in!\n\n## Solution\n\n```{r}\n#| echo: true\noriginal <- nrow(ds)\nds %<>%\n  filter(!is.na(user_submitted_review))\nnew <- nrow(ds)\n```\n\nThe number of rows removed is `r original-new`\n\nThe average number of books purchased in an order is `r mean(ds$total_purchased, na.rm=T)`\n\nFilling the missing on total_purchased using the mean above\n\n```{r}\nds %<>%\n  mutate(total_purchased=if_else(is.na(total_purchased),3.99,total_purchased))\n```\n\n## Task Two\n\n1.  Examine the unique sentences that are present in in user_submitted_review.\n\n-   Look at each of these reviews and see if you can detect specific words or phrases that help indicate if the review is positive or not.\n-   For example, a word like \"good\" or \"great\" can help indicate that a review is positive. A phrase like \"not recommended\" can help indicate that a review is not positive.\n\n2.  Create a function that takes in a sentence (think: a value from user_submitted_review) and returns a value indicating if the review is positive or not.\n\n-   We will leave it up to you to design your function, but it must perform this essential role.\n\n-   Recall that you can use the `str_detect()` function to check if a string contains a particular substring\n\n-   Combining the `str_detect()` function with a control flow function like case_when() would be a great way to approach this problem.\n\n-   Create a new column in the dataset that indicates whether or not the review in a given row is positive or not.\n\nChecking unique values for user_submitted_review\n\n```{r}\n#| echo: true\nunique(ds$user_submitted_review)\n```\n\nGrading reviews to positive and negative\n\n```{r}\nds %<>%\n  mutate(\n    review_class= case_when(str_detect(user_submitted_review,\"it was okay\")~\"Positive\",\n                            str_detect(user_submitted_review,\"Awesome!\")~\"Positive\",\n                             str_detect(user_submitted_review,\"Hated it\")~\"Negative\",\n                            str_detect(user_submitted_review,\"Never read a better book\")~\"Positive\",\n                           str_detect(user_submitted_review,\"OK\")~\"Positive\",\n                           str_detect(user_submitted_review,\"The author's other books were better\")~\"Negative\",\n                            str_detect(user_submitted_review,\"A lot of material was not needed\")~\"Negative\",\n                            str_detect(user_submitted_review,\"Would not recommend\")~\"Negative\",\n                            str_detect(user_submitted_review,\"I learned a lot\")~\"Positive\",\n                            \n                            \n                            TRUE ~ user_submitted_review\n                            ))\n```\n\n\n## Task Three\n\n1. Perform the proper conversion of the date column, so that it actually represents a date and time. \n\n2. Create a new grouping column using the `mutate()` function that will help distinguish between sales that happen before July 1, 2019 and sales that happen after this date.\n\n3. Create a summary table that compares the number of books purchased before July 1, 2019 to after.\n\n> After creating the table, judge whether or not the program was actually effective in terms of increasing the number of books sold.\n\n\n```{r}\n#| echo: true\nds %<>%\n  mutate(date=mdy(date)) %>%\n  mutate(bef_jul=if_else(date < as.Date(\"2019-07-01\"),\"Before July\",\"After July\"))\n```\n\n```{r}\nsales <- ds %>%\n  group_by(bef_jul) %>%\n  summarise(count=n()) %>%\n  summarise(bef_jul,count,prop=count/sum(count)*100)\nknitr::kable(sales)\n```\n\nIn data analysis, it's common to have several subgroups that you want to compare. In the last step, we just compared sales that were before and after July 1, 2019. It's possible that individual customers responded better to the program and bought more books in response to the program. Or, it could have been businesses that bought more books. In order to explore this sub-analysis, we also need to divide the sales before and after July 1, 2019 into sales that were for individuals versus businesses. \n\n\n## Task Four\n\n\n1. Perform the same analysis that you did in the last step but add in the customer_type column to further subdivide the groups.\n2. Examine the results of the analysis and write about your observations. Does the program still seem to have an effect on increasing sales? Did it have a different effect for individuals versus businesses?\n\n```{r}\nsales <- ds %>%\n  group_by(customer_type,bef_jul) %>%\n  summarise(count=n()) %>%\n  summarise(customer_type,bef_jul,count,prop=count/sum(count)*100)\nknitr::kable(sales)\n```\n\n## Task Five\n\n + Create another summary table that compares the number of positive reviews before and after July 1, 2019.\n\n     + Does it seem that review sentiment improved after the program was created? Or did it get worse?\n\n```{r}\nreviews <- ds %>%\n  group_by(bef_jul,review_class) %>%\n  summarise(count=n()) %>%\n  summarise(bef_jul,review_class,count,prop=count/sum(count)*100)\nknitr::kable(reviews)\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"output-file":"book_sales.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.545","title":"Analyzing Book Sales","author":"Castory Munishi","date":"10/25/2022","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}