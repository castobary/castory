{
  "hash": "e862354a27fa5fb84b9bb7931da3ca14",
  "result": {
    "markdown": "---\ntitle: \"Histogram , Bar and Box Plots\"\nauthor: \"Castory Munishi\"\ndate: 10/27/2020\nexecute: \n  echo: true\n  warning: false\nformat: revealjs\neditor: visual\n---\n\n\n\n\n## Background 1/2\n\n+ When Hollywood releases new movies, Metacritic, Fandango, Rotten Tomatoes, and IMDB use different systems to calculate ratings based on the reviews by movie critics and consumers.\n\n+  Which of these sites should you consult when deciding whether to see a movie?\n\n+ Understanding how the different sites' movie reviews compare to one another is a good start\n\n+ Fandango has been suspected of releasing inflated ratings to increase ticket sales.\n\n+ After they found that some films that garnered poor ratings elsewhere were rated highly on Fandango, analysts from FiveThirtyEight investigated and published an article about bias in movie ratings.\n\n\n## Background 2/2\n\n+ To conduct the investigation, the team compiled data for 147 films from 2015 with reviews from movie critics and consumers\n\n+ In this mission, you'll use this data and ggplot2 to visualize reviews from Metacritic, Fandango, Rotten Tomatoes, and IMDB to get a sense for differences in the way the four sites compute movie ratings.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  ggplot2,\n  dplyr,\n  readr\n)\nmovie_review <- read_csv(\"datasets/movie_reviews_2.csv\")\n#spec(movie_review)\n```\n:::\n\n\n# Preparing the dataset\n\n## Fandago Ratings\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFandago_Ratings <- movie_review[,c(1,8)]\nkable(Fandago_Ratings[1:5,])\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> FILM </th>\n   <th style=\"text-align:right;\"> Fandango_Ratingvalue </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Avengers: Age of Ultron (2015) </td>\n   <td style=\"text-align:right;\"> 4.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Cinderella (2015) </td>\n   <td style=\"text-align:right;\"> 4.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Ant-Man (2015) </td>\n   <td style=\"text-align:right;\"> 4.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Do You Believe? (2015) </td>\n   <td style=\"text-align:right;\"> 4.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hot Tub Time Machine 2 (2015) </td>\n   <td style=\"text-align:right;\"> 3.0 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Rotten Tomato Ratings\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRotten_Tomato_Ratings <- movie_review[,c(1,10)]\nkable(Rotten_Tomato_Ratings[1:5,])\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> FILM </th>\n   <th style=\"text-align:right;\"> RT_user_norm </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Avengers: Age of Ultron (2015) </td>\n   <td style=\"text-align:right;\"> 4.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Cinderella (2015) </td>\n   <td style=\"text-align:right;\"> 4.0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Ant-Man (2015) </td>\n   <td style=\"text-align:right;\"> 4.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Do You Believe? (2015) </td>\n   <td style=\"text-align:right;\"> 4.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hot Tub Time Machine 2 (2015) </td>\n   <td style=\"text-align:right;\"> 1.4 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Metacritic Ratings\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMetacritic_Ratings <- movie_review[,c(1,12)]\nkable(Metacritic_Ratings[1:5,])\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> FILM </th>\n   <th style=\"text-align:right;\"> Metacritic_user_nom </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Avengers: Age of Ultron (2015) </td>\n   <td style=\"text-align:right;\"> 3.55 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Cinderella (2015) </td>\n   <td style=\"text-align:right;\"> 3.75 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Ant-Man (2015) </td>\n   <td style=\"text-align:right;\"> 4.05 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Do You Believe? (2015) </td>\n   <td style=\"text-align:right;\"> 2.35 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hot Tub Time Machine 2 (2015) </td>\n   <td style=\"text-align:right;\"> 1.70 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## IMDB Ratings\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIMDB_Ratings <- movie_review[,c(1,13)]\nkable(IMDB_Ratings[1:5,])\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> FILM </th>\n   <th style=\"text-align:right;\"> IMDB_norm </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Avengers: Age of Ultron (2015) </td>\n   <td style=\"text-align:right;\"> 3.90 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Cinderella (2015) </td>\n   <td style=\"text-align:right;\"> 3.55 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Ant-Man (2015) </td>\n   <td style=\"text-align:right;\"> 3.90 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Do You Believe? (2015) </td>\n   <td style=\"text-align:right;\"> 2.70 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hot Tub Time Machine 2 (2015) </td>\n   <td style=\"text-align:right;\"> 2.55 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Creating A new Variable with the rating Site\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRotten_tomatoes <- rep(x=\"Rotten Tomatoes\",times=146)\n\nRotten_Tomato_Ratings <- Rotten_Tomato_Ratings %>%\n  mutate(Rating_site = Rotten_tomatoes)\n\nIMDB <- \"IMDB\"\n\nIMDB_Ratings <- IMDB_Ratings %>%\n  mutate(Rating_site = IMDB)\n\nFandago <- \"Fandago\"\n\nFandago_Ratings <- Fandago_Ratings %>%\n  mutate(Rating_site = Fandago)\n\nMetacritic_Ratings <- Metacritic_Ratings %>%\n  mutate(Rating_site = \"Metacritic\")\n```\n:::\n\n\n## Renaming to create a similar rating column\n\n+ We will combine the created datasets and hence we need to have common column names\n\n::: {.cell}\n\n```{.r .cell-code}\nRotten_Tomato_Ratings <- Rotten_Tomato_Ratings %>%\n  rename(Rating = RT_user_norm)\n\nIMDB_Ratings <- IMDB_Ratings %>%\n  rename(Rating = IMDB_norm)\n\nFandago_Ratings <- Fandago_Ratings %>%\n  rename( Rating = Fandango_Ratingvalue)\n\nMetacritic_Ratings <- Metacritic_Ratings %>%\n  rename(Rating = Metacritic_user_nom )\n```\n:::\n\n\n## Combining to Create a new dataframe\n\n+ `full_join()` will add the dataframes by including all rows in x or y.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFirst_two <- full_join(Rotten_Tomato_Ratings,IMDB_Ratings,\n                       by = NULL , copy = FALSE )\n\nSecond_two <- full_join(Fandago_Ratings,Metacritic_Ratings,\n                        by = NULL , copy = FALSE)\n\n\nreviews <- full_join(First_two , Second_two ,\n                               by = NULL , copy = FALSE)\n```\n:::\n\n\n\n## Saving a dataframe as csv file\n\n+ A dataframe can be saved as a csv file as given in the code below using `write.csv()` function\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#write.csv(reviews, file = \"datasets/reviews.csv\")\n```\n:::\n\n\n## Comparing Averages Among Rating Sites\n\n\n+  Let's start by getting a sense for how reviews reported by the four sites compare.\n\n+ You can approach this problem by calculating the average ratings for each rating site. \n\n+ To do this, group the reviews data frame into one group for each value of Rating_Site  and calculate the average of Rating for each group - \"Split Apply Combine\"\n\n\n## Task\n\n+ Calculate the average rating for each review site\n\n      1. Use `group_by()` to group the reviews data frame by Rating_Site.\n      2. Use `summarize()` to calculate the average Rating for each Rating_Site\n      \n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreview_avgs <- reviews %>%\n  group_by(Rating_site) %>%\n  summarize(Average = round(mean(Rating),2))\nkable(review_avgs)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Rating_site </th>\n   <th style=\"text-align:right;\"> Average </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Fandago </td>\n   <td style=\"text-align:right;\"> 3.85 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> IMDB </td>\n   <td style=\"text-align:right;\"> 3.37 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Metacritic </td>\n   <td style=\"text-align:right;\"> 3.26 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Rotten Tomatoes </td>\n   <td style=\"text-align:right;\"> 3.19 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Visualizing Differences Among Groups Using Bar Charts\n\n+  Bar charts represent grouped data summeries using bars with heights proportional to values of a summary variable such as the average.\n\n+ The syntax is similar to that of line plots, ggplots are built layer by layer\n\n+ Instead `geom_line()`, `geom_bar` is used to generate bar plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot1 <- ggplot(data = review_avgs) +\n  aes(x = Rating_site, y = Average) +\n  geom_bar(stat = \"identity\", width = 0.5) + \n  labs(title = \"Bar Plot of Average Ratings\",\n       y = \"Average Rating\", x = \"Rating Site\") +\n  theme_minimal()\n```\n:::\n\n\n## Plot Display \n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot1\n```\n\n::: {.cell-output-display}\n![](hist_box_files/figure-revealjs/code12-1.png){width=960}\n:::\n:::\n\n\n## stat = \"identity\" role\n\n+ In plot 1 code, we specify stat = \"identity\" within the `geom_bar()` layer.\n\n+ This is because, by default, using `geom_bar()` creates a bar graph where the height of the bars corresponds to the number of values in the specified y-variable. \n\n+ Using stat = \"identity\" overrides the default behavior and creates bars equal to the value of the y-variable,the average.\n\n\n## Using Histograms to Understand Distributions 1/2\n\n+ As you look at plot 1, you can clearly see that Fandango has a higher average movie rating than the other three sites. \n\n+  Does this mean Fandango tends to give higher ratings?\n \n+ As you consider that question, let's think about what the bar chart does not show us.\n \n+ It makes sense to wonder if Fandango's average movie rating is higher than those of the other sites because it tends to give all movies good ratings, or because it gave some movies average ratings and a small number of movies excellent ratings.\n \n+ However, the bar graph does not provide this information.\n\n## Using Histograms to Understand Distributions 2/2\n\n+ The average of a set of numbers does not tell us anyting about the spread of the numbers that were used to calculate the average. \n\n+ For example, the values of these two variables both have an average of 5:\n \n    + `Variable 1: 5 5 5 5 5 4 5 5 6 5`\n    + `Variable 2: 20 9 1 2 8 4 9 5 7`\n \n+ However, while values of Variable 1 are distributed between 4 and 6, values of Variable 2 are distributed between 1 and 20. \n\n+ The values of Variable 2 are much more spread out than those of Variable 1.\n\n## Histograms \n\n+ Histograms can address the weakness of barplots\n\n+ Histograms are used to **understand characteristics of one variable rather than the relationship between two variables**\n \n+ Histograms depict the frequency with which values of a variable occur, otherwise known as the distribution of the variable. \n\n\n## Histograms x and y\n\n+ The x axis is an aggregate of variables which are binned together to form class intervals\n\n+ On the y-axis is a variable that is calculated automatically when you create the histogram: count. \n\n+ The count variable represents the number of values of the x variable that fall into each of the categories on the x-axis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n plot2 <- ggplot(data = reviews) + \n   aes(x = Rating) +\n   geom_histogram(binwidth = 1)\n```\n:::\n\n\n## Histogram with binwidth of 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot2\n```\n\n::: {.cell-output-display}\n![](hist_box_files/figure-revealjs/code14-1.png){width=960}\n:::\n:::\n\n\n## Histogram with 10 bins\n\n\n::: {.cell}\n\n```{.r .cell-code}\n ggplot(data = reviews) + \n    aes(x = Rating) +\n    geom_histogram(bins = 10)\n```\n\n::: {.cell-output-display}\n![](hist_box_files/figure-revealjs/code16-1.png){width=960}\n:::\n:::\n\n\n## Histogram Code\n\n+ Within the `aes()` layer, you only need to specify the independent variable.\n \n+ The `geom_histogram()` layer specifies creation of a histogram to represent the independent variable. \n \n+ Within the `geom_histogram()` layer, you can use two different arguments to specify the number of categories for binning the independent variable.\n \n1. binwidth = allows you to specify the size of the bins, and is useful for instances,  such as this example, where you want categories to span specific intervals.\n\n2. bins = allows you to specify the number of bins, which can be useful to experiment with when deciding how much detail you want to use to display your data.\n\n## Task \n\n1.Create a histogram to show the distribution of all values of the Rating variable in the reviews data frame.\n2. Specify 30 bins to categorize values of the independent variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\n plot3 <- ggplot(data = reviews) + \n   aes(x = Rating) +\n   geom_histogram(bins = 30)\n```\n:::\n\n\n## Solution : Plot Display\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot3\n```\n\n::: {.cell-output-display}\n![](hist_box_files/figure-revealjs/code17-1.png){width=960}\n:::\n:::\n\n\n## Comparing Multiple Variables : Faceted plots\n\n+ From the histogram you created, you can see that increasing the number of bins produces a visualization of the data with greater detail:\n \n+  Histograms allow you to visualize the shape of a distribution — where values of the data are clustered. \n\n+ Most values of Rating are clustered between 3.5 and 4.5.\n \n+ This histogram tells us about the distribution of all values of the Rating variable, but what we really want to investigate is how ratings for different rating sites differ.\n \n+ A faceted plot will do.\n\n## Task\n\n+ Add a layer to the histogram you created on the last screen to create a faceted graph containing four histograms of the distribution of Rating for each site:\n \n     + Rotten Tomatoes\n     + IMDB\n     + Metacritic\n     + Fandango\n     \n## Solution 1: Using 30 bins\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot4 <- ggplot(data = reviews) + \n   aes(x = Rating) +\n   geom_histogram(bins = 30) +\n   facet_wrap(~Rating_site, nrow= 2)\n```\n:::\n\n\n## Plot Display\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot4\n```\n\n::: {.cell-output-display}\n![](hist_box_files/figure-revealjs/code19-1.png){width=960}\n:::\n:::\n\n\n## Solution 2 : Using 5 bins\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot5 <- ggplot(data = reviews) + \n    aes(x = Rating) +\n    geom_histogram(bins = 5) +\n    facet_wrap(~Rating_site, nrow= 2)\n```\n:::\n\n\n## Plot Display\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot5\n```\n\n::: {.cell-output-display}\n![](hist_box_files/figure-revealjs/code21-1.png){width=960}\n:::\n:::\n\n\n## Explanations\n\n+ The four histograms in your faceted plot show differences in the distributions for each rating site:\n \n + The distributions of Rating for Rotten Tomatoes and Metacritic indicate that those two sites are more likely to give movies poor ratings than Fandango or IMDB, which have most values of Rating clustered over 3.\n \n+ Comparing these distributions suggests some sites give poor ratings more often than others. \n\n+ For example, the difference between the distributions of Ratings for Fandango and Rotten Tomatoes is very clear\n \n+ However, Fandango and IMDB have distributions that look similar. Is there a better way to visualize differences between them?\n\n## Comparing Distributions Using Aesthetics\n\n+ As  for line graphs,  values associated with different variables can be distinguished by mapping them to different colors within the `aes()` layer:\n \n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot6 <- ggplot(data = reviews) + \n   aes(x = Rating, color = Rating_site) +\n   geom_histogram(bins = 30) +\n   theme_minimal()\n```\n:::\n\n\n## Plot Display\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot6\n```\n\n::: {.cell-output-display}\n![](hist_box_files/figure-revealjs/code23-1.png){width=960}\n:::\n:::\n\n\n## Using fill\n\n+ n plot6, the number of values of Rating for each value of Rating_Site are indicated by bars outlined by different colors.\n \n+ Another option for using aesthetics to map values of Rating to different values of Rating_Site is to use the argument fill = instead of color =.  \n\n+ Instead of outlines, fill = depicts bars filled in with different colors. \n\n## Task\n\n+ Create a histogram depicting the distribution of Ratings for each site using bars filled with different colors.\n\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot7 <- ggplot(data = reviews) + \n   aes(x = Rating, fill= Rating_site) +\n   geom_histogram(bins = 30)\n```\n:::\n\n\n## Plot Display\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot7\n```\n\n::: {.cell-output-display}\n![](hist_box_files/figure-revealjs/code25-1.png){width=960}\n:::\n:::\n\n\n\n## Visualizing Averages And Variations\n\n+ Box plots are used to visualize the center of data and distribution\n\n+  Like bar graphs, box plots provide a summary of data by group. \n\n+ Like histograms, they provide information about how data are spread\n\n+  Groups are indicated on the x-axis since they are the independent variable. \n\n+  Dependent variable is on the y-axis.\n\n## Creating a Boxplot\n\n+ To create a box plot using ggplot2, the syntax for creating the data layer and mapping data to x and y variables is familiar\n\n`ggplot(data = reviews) +`\n   `aes(x = Rating_site, y = Rating)`\n   \n+ Add a `geom_boxplot()` layer to specify creation of a box plot.\n\n## Task\n\n1. Create a box plot to visualize summaries of values of the Rating variable for each value of Rating_Site.\n\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = reviews) +\n   aes(x = Rating_site, y = Rating) +\n   geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](hist_box_files/figure-revealjs/code26-1.png){width=960}\n:::\n:::\n\n\n## Anatomy of Boxplot 1/3\n\n+ In general, you can see that the box representing Fandango ratings is higher up on the y-axis than those for the other sites. \n\n+ You can also see the Rotten Tomatoes ratings appear to be more spread out, which is consistent with what you saw when we plotted the data using histograms.\n \n+ While you've been able to glean some information from this box plot, let's dig deeper into the individual components to fully understand all they can tell us about data.\n \n+ Box plots present what is known to statisticians as a **five-number summary**. \n\n\n## Anatomy of Boxplot 2/3\n\n### The Five Number Summary\n\n 1. The largest value(Max): Represented by the top of the black line extending from the top of the box. These lines are also known as \"whiskers\".\n\n 2. The third quartile (Q3): Represented by the top of the box. Seventy-five percent of the values are smaller than the third quartile.\n\n 3.The median: Represented by the thick black line. The median is the value that falls in the middle of the data.\n \n 4.The first quartile (Q1): Represented by the bottom of the box. Twenty-five percent of the values are smaller than the first quartile.\n \n5.The smallest value(Min): Represented by the bottom of the black line extending from the bottom of the box.\n\n\n## Anatomy of Boxplot 3/3\n\n### Intequartile Range\n\n+ The white box, bounded by Q3 and Q1, is referred to as the Interquartile Range or IQR.\n\n+ The IQR encompasses 50 percent of the data, and is calculated by subtracting Q1 from Q3.\n\n\n## Anatomy of Boxplot 4/4 - Outliers\n\n+ In the box plot you created, notice there are some points that fall below the bottom of the black lines that represent the smallest values.\n\n+ These points are referred to as outliers because they are outside the range of what would be expected based on the rest of the data.\n \n+ When you make a box plot using ggplot2, data points that fall below `Q1 − 1.5 IQR` or above `Q3 + 1.5 IQR` are defined as outliers. \n\n## Task\n\n1. In the previous exercise, you created a box plot to visualize summaries of ratings for Fandango, IMDB, Metacritic, and Rotten Tomatoes.\n\n2. Add layers to your plot so it fits the following specifications:\n  \n White panel background\n The plot title: \"Comparison of Movie Ratings\"\n \n\n::: {.cell}\n\n```{.r .cell-code}\n plot8 <- ggplot(data = reviews) +\n   aes(x = Rating_site, y = Rating) +\n   geom_boxplot() +\n   labs(title = \"Comparison of Movie Ratings\") +\n   theme(panel.background = element_rect(fill = \"white\"))\n```\n:::\n\n\n## Plot Display\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot8\n```\n\n::: {.cell-output-display}\n![](hist_box_files/figure-revealjs/code28-1.png){width=960}\n:::\n:::\n\n\n## Findings\n\n\n1. Values of Rating for Rotten Tomatoes are spread out, indicating they regularly give movies ratings that range from poor to excellent.\n2. The range of values of Rating for Fandango and IMDB are both quite narrow. Fandango's lowest reviews are around 2.5, whle outliers indicate that IMDB has some reviews that are between 2 and 2.4.\n3. Fandango's median for values of Rating is higher than the median of the other sites, indicating Fandango tends to give higher ratings.\n \n__Does the box plot you made support the idea that Fandango's reviews are biased? Which site do you think would provide the most unbiased reviews?__\n\n## Deciding on A Visualization\n\n+ Bar charts may be used for showing a quick summary of your data, such as averages or counts of the number of instances of a value that occur for a given variable.\n\n+ Histograms are useful for visualizing distributions of data when you want to know the shape of a distribution (in other words, where most values are clustered).\n\n+ Box plots provide an informative summary of the shape, spread, and center of your data.\n\n ",
    "supporting": [
      "hist_box_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}