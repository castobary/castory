{
  "hash": "03038065987ddbf8f44a4c0abaa404c5",
  "result": {
    "markdown": "---\ntitle: \"Creating Line Graphs\"\nauthor: \"Castory Munishi\"\ndate: 10/28/2020\nexecute: \n  echo: true\n  warning: false\nformat: revealjs\neditor: visual\n---\n\n\n\n\n## Introduction to Data Visualization\n\n+ In the next couple of discussions we will examine data visualization in details\n\n+ We will be working to identify patterns in our datasets\n\n+ Three important key issues :\n\n 1. Explore the principles of data visualization.\n 2. Learn to write R code to visualize trends in data in different ways.\n 3. Build intuition around when different types of visualizations will help you understand your data.\n \n## ggplot2\n \n+ We will learn the most important tidyverse package : ggplot2\n\n+ The ggplot2 package is so popular among R users because of its consistent syntax and the efficiency with which you can use it to create high-quality visualizations.\n\n## The Data and Mission Objective\n\n+ In this mission, you'll create line graphs to visualize and understand changes in United States life expectancies over time.\n\n+ The National Center for Health Statistics has been tracking United States mortality trends since 1900. \n+ They've compiled data on United States citizen life expectancy by race and sex.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(readr)\nlife_expec <- read_csv(\"datasets/life_expec.csv\")\n#str(life_expec)\n```\n:::\n\n\n## The data description\n\n+ Each column in the data frame contains a variable pertaining to the population of individuals born each year. Here's an explanation of each variable:\n\n     1.Year: The year of birth.\n     \n     2.Race: The races represented in the measured population.\n     \n     3.Sex: The sex of the measured population.\n     \n     4.Avg_Life_Expec: The average life expectancy, in years, at birth of people born in a given year.\n     \n     5.Age_Adj_Death_Rate: The age adjusted death rate of people born in a given year. \n    \n+ The age adjusted death rate is a metric that adjusts death rate for populations' age distributions to make population comparisons fair.\n\n## Data Collection\n\n+ Since collection of these data began in 1900, we have over 100 years of data that we can use to study changes in average U.S. life expectancy over time.\n\n+ You may suspect that, as health care has improved, people are living longer than they did earlier in the 20th century.\n\n+ As you scroll through the data frame, you'll see that, indeed, life expectancy has generally increased and death rate has decreased over time.\n\n\n## Summary of Our Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlife_expec$Race <- factor(life_expec$Race)\nlife_expec$Sex <- factor(life_expec$Sex)\nsummary(life_expec)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Year             Race             Sex      Avg_Life_Expec \n Min.   :1900   All Races:348   Both Sexes:348   Min.   :29.10  \n 1st Qu.:1929   Black    :348   Female    :348   1st Qu.:56.60  \n Median :1958   White    :348   Male      :348   Median :66.60  \n Mean   :1958                                    Mean   :64.12  \n 3rd Qu.:1986                                    3rd Qu.:73.60  \n Max.   :2015                                    Max.   :81.40  \n                                                 NA's   :9      \n Age_Adj_Death_Rate\n Min.   : 616.7    \n 1st Qu.:1040.2    \n Median :1541.4    \n Mean   :1614.1    \n 3rd Qu.:2073.0    \n Max.   :3845.7    \n                   \n```\n:::\n:::\n\n\n## Observing Patterns\n\n+ While scanning a data frame may give you some sense of general patterns, creating a visualization of the data allows for a more detailed analysis,  such as envisioning when historical events led to temporarily decreased life expectancy. \n\n+ Exploring data visually is usually one of the first steps data scientists take when working with new data.\n\n\n## Using Plots to Explore Patterns in Data\n\n+ Plots are visual representations that use graphics like dots, lines, and bars to help you look for patterns in data.\n\n+ A plot has variables like x and y\n\n+ There are many types of plots you can use to visualize data\n\n+ Selecting the appropriate plot for your data, and the questions you want to use it to answer, is an important skill that you'll hone over time.\n\n\n## Changes in life expectancy over time. \n\n+ Put another way, we are interested in the relationship between life expectancy (the variable Avg_Life_Expec) and time (the variable Year).\n\n+ For this task, we'll use a **line chart**, which is a type of plot especially useful for visualizing changes over time. \n\n+ A line chart displays information as a series of data points connected by a line:\n\n+ Line graphs are useful for depicting data that are continuous, meaning the data can have any value.\n\n+ Average life expectancy, as measured in years, is an example of continuous data.\n\n\n## Data Visualization and Grammer of Graphics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\n+ The gg in ggplot2 stands for \"Grammar of Graphics\", \n+ Refers to a system for data visualization first described by Leland Wilkinson.\n\n+ Hadley Wickham, chief data scientist at RStudio, used the principles of the Grammar of Graphics to develop ggplot2 to allow systematic, consistent, time-efficient creation of data visualizations.\n\n## Step by Step\n\n+ A learning dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(1,4,3,5,6)\ny <- c(6,3,5,1,2)\n```\n:::\n\n\n+ To begin making a plot, use the `ggplot()` function and specify the data frame you'll be visualizing data from:\n\n`ggplot( data = data_frame)`\n\n+ This step creates a coordinate system that you can add layers to.\n\n+ Store your dataframes as variables\n\n+ The graphic you'll see at this stage is an empty plot.\n\n## Task\n\n+ Use the `ggplot()` function to create the first layer of your plot using the life_expec data frame.\n\n\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot( data = life_expec)\n```\n\n::: {.cell-output-display}\n![](line_graphs_files/figure-revealjs/code5-1.png){width=960}\n:::\n:::\n\n\n## Mapping Values to Axes\n\n+ At this point, your graph isn't much to look at.\n\n+ You've created an empty graph for your data that you will now add layers to.\n+ The first layer you'll add is one to map your data points to scales and a coordinate system, which generates axes. \n+ To define the variables you want to map to your graph, you'll add a layer using aes(), which is short for \"aesthetics\", to your graph\n\n`ggplot(data = data_frame) +`\n  `aes(x = variable_1, y = variable_2)`\n\n## Axes\n\n+ When graphing two-dimensional data,which is in most of the analysis, ggplot2 by default uses the Cartesian coordinate system. This means that your graphs have two axes:\n \n    1. Vertical Axis\n    2. Horizontal Axis\n    \n## Which Axis?\n\n+ How do you know which axis to use for which variable?\n\n+ The answer to this question is informed by what you think the relationship between two variables is:\n\n     1. The variable that changes depending on the other variable is called the **dependent variable**. We assign this variable to the vertical axis (y-axis)\n\n     2. The variable that changes independent of the other variable is called the **independent variable**. We assign this variable to the horizontal axis (x-axis)\n     \n+ In our dataset, the `Avg_Life_Expec` changes as time progresses,  and so we would consider it to be the dependent variable. The `Year` variable represents time, and is the independent variable:\n\n## Task \n\n+ Let's add a layer to your graph to map the Avg_Life_Expec and Year variables to a coordinate system.\n+   Add an `aes()` layer to your graph specifying Avg_Life_Expec as the dependent variable and Year as the independent variable\n\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n ggplot( data = life_expec) +\n   aes( x = Year , y = Avg_Life_Expec)\n```\n\n::: {.cell-output-display}\n![](line_graphs_files/figure-revealjs/code6-1.png){width=960}\n:::\n:::\n\n\n## Adding Geometric Objects To Visualize Data Points\n\n+ Now, your chart has a coordinate system and axes:\n\n+ With this foundation in place, the next step is to add geometric symbols to the graph to represent data points.\n+ To add a line representing the relationship between the Year and Avg_Life_Expec variables to your graph, you'll add a `geom_line()` layer to your graph:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#  ggplot(data = data_frame) +\n#    aes(x = variable_1, y = variable_2) +\n#    geom_line()\n```\n:::\n\n\n+ Notice how we add each new layer to the graph using a + at the end of the preceding line of code. \n\n## Task \n\n+ Let's add a layer to your graph to allow you to visualize the data.\n+ Add a layer to your graph to illustrate the relationship between Year and Avg_Life_Expec.\n\n\n## Solution\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot( data = life_expec) +\n    aes( x = Year , y = Avg_Life_Expec) +\n    geom_line()\n```\n\n::: {.cell-output-display}\n![](line_graphs_files/figure-revealjs/code8-1.png){width=960}\n:::\n:::\n\n\n\n## Selecting Data for Visualizion\n\n+ You have now produced a graph with the relationship between Year and Avg_Life_Expec represented by a line:\n  \n+ However, the graph you've created appears to have multiple data points for Avg_Life_Expec for each instance of Year.\n\n+ Let's take a look at a single year from the life_expec data frame to see what's going on:\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nlife_expec %>%\n    filter( Year == 2000 )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 Ã— 5\n   Year Race      Sex        Avg_Life_Expec Age_Adj_Death_Rate\n  <dbl> <fct>     <fct>               <dbl>              <dbl>\n1  2000 All Races Both Sexes           76.8               869 \n2  2000 All Races Female               79.7               731.\n3  2000 All Races Male                 74.3              1054.\n4  2000 Black     Both Sexes           71.8              1121.\n5  2000 Black     Female               75.1               928.\n6  2000 Black     Male                 68.2              1404.\n7  2000 White     Both Sexes           77.3               850.\n8  2000 White     Female               79.9               715.\n9  2000 White     Male                 74.7              1029.\n```\n:::\n:::\n\n\n## Explanations\n\n+ This is because, for each year, average life expectancies for multiple populations (by sex and race) are included in the data set.\n  \n+ To get a sense for the change over time of life expectancy for the entire U.S. population, let's use data for all races and both sexes to create the line graph.(filtering)\n\n\n## TASK \n\n+ Let's create a new line graph containing only average life expectancy data for the entire U.S. population.\n\n   1.Create a new data frame, life_expec_filter, containing only rows for which the Race variable has the value \"All Races\" and the Sex variable has the value \"Both Sexes\".\n   2.Create a line graph that displays the relationship between Avg_Life_Expec and Year.\n   \n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlife_expec_filter <- life_expec %>%\n    filter( Race == \"All Races\" & Sex == \"Both Sexes\")\n  \nplot1 <- ggplot( data = life_expec_filter) + \n aes(x = Year , y = Avg_Life_Expec) + \n geom_line()\n```\n:::\n\n\n\n## The plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](line_graphs_files/figure-revealjs/code11-1.png){width=960}\n:::\n:::\n\n\n## Explanations\n\n+  This visualization of the relationship between Avg_Life_Expec and Year allows for the quick detection of some interesting patterns:\n\n    1.Generally, average life expectancy of the U.S. population has been increasing over time.\n    \n    2.Before the 1950s, life expectancy fluctuated substantially from year to year.\n    \n    3.In the 1920s, life expectancy dropped dramatically, and then increased once again.\n    \n+ Do you have any knowledge of world and U.S. history that may explain some of these patterns?\n\n\n## Adding Axis Title and Changing Axis Labels\n\n+ A graph should be able to stand out alone\n+ A title will help to tell what is the plot about\n+ Axis labels will which data is being represented\n+ The `labs()` is used for titles and axis labels\n+ Be descriptive\n+ The syntax\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ggplot(data = data_frame) +\n#   aes(x = variable_1, y = variable_2) +\n#   geom_line() +\n#   labs(title = \"Title of Graph\", x = \"new x label\",\n#        y = \"new y label\")\n```\n:::\n\n\n\n## Task\n\n+  1.Give your graph the descriptive title that communicates the goal of the visualization: \"United States Life Expectancy: 100 Years of Change\"\n+ 2. Give the y-axis this label: \"Average Life Expectancy (Years)\"\n\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot2 <- ggplot( data = life_expec_filter) +\naes( x = Year , y = Avg_Life_Expec) +\n  geom_line() +\n  labs ( title = \"United States Life Expectacy : 100 Years of Change\",\n         y = \"Average Life Expectacy(Years)\" )\n```\n:::\n\n\n## The labelled plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](line_graphs_files/figure-revealjs/code14-1.png){width=960}\n:::\n:::\n\n\n## Refining Graph Aesthetics\n\n+ Time to make your plot stand out\n+ Making modifications such as background color\n\n+ To modify non-data ggplot2 graph components, including background color, you can add a layer to your graph using theme().\n\n+ Within the theme() layer, you'll  use the argument:\n   `panel.background = element_rect(\"background_color\")`\n   \n+To specify the color of the background rectangle (which is what \"rect\" stands for).\n\n## The syntax\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ggplot(data = data_frame) +\n#   aes(x = variable_1, y = variable_2) +\n#   geom_line() +\n#   labs(title = \"Title of Graph\", x = \"new x label\", y = \"new y label\") + \n#   theme(panel.background = element_rect(fill = \"background_color\"))\n```\n:::\n\n\n## Task\n\n+ Let's change the background of your line graph to make it less distracting\n\n    1 . Change the background color of your line graph to white\n\n## Solution\n\n::: {.cell}\n\n```{.r .cell-code}\nplot2 +\n   theme(panel.background = element_rect(fill = \"white\"))\n```\n\n::: {.cell-output-display}\n![](line_graphs_files/figure-revealjs/code16-1.png){width=960}\n:::\n:::\n\n\n## Using Line Graph to Understand the Data\n\n1. First, we can see that, generally, the average U.S. life expectancy has increased over time.\n\n2. However, notice the sharp drop in life expectancy around the year 1920, from about 55 to under 40 years. What could have cause this?\n         \n    A bit of research reveals that, in 1918, there was a deadly influenza epidemic that affected the U.S. population, this could explain the rapid decrease in average life expectancy.\n\n3. It's also interesting to observe that average life expectancy fluctuated between 1900 and 1950 before becoming more stable from year to year after about 1950.\n\n       **Do you have any ideas about possible causes?**\n",
    "supporting": [
      "line_graphs_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}