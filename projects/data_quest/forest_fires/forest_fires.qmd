---
title: "Analyzing Forest Fires"
author: "Castory Munishi"
format:
  html:
    theme: united
    code-fold: true
    code-tools: true
date: 09/24/2022
editor: visual
toc: true
---

## Introduction

Forest fires can create ecological problems and endanger human lives and property. Understanding when they occur and what causes them is important for managing them.

### Variable Descriptions

-   X: X-axis spatial coordinate within the Montesinho park map: 1 to 9
-   Y: Y-axis spatial coordinate within the Montesinho park map: 2 to 9
-   month: Month of the year: 'jan' to 'dec'
-   day: Day of the week: 'mon' to 'sun'
-   FFMC: Fine Fuel Moisture Code index from the FWI system: 18.7 to 96.20
-   DMC: Duff Moisture Code index from the FWI system: 1.1 to 291.3
-   DC: Drought Code index from the FWI system: 7.9 to 860.6
-   ISI: Initial Spread Index from the FWI system: 0.0 to 56.10
-   temp: Temperature in Celsius degrees: 2.2 to 33.30
-   RH: Relative humidity in percentage: 15.0 to 100
-   wind: Wind speed in km/h: 0.40 to 9.40
-   rain: Outside rain in mm/m2 : 0.0 to 6.4
-   area: The burned area of the forest (in ha): 0.00 to 1090.84

> FWI stands for "fire weather index", a method used by scientists to quantify risk factors for forest fires.

## Task One

Take a look at the data itself and familiarize yourself with it. Here are some guiding questions that you will want to answer as you look at the data: + What does a single row represent? + With what I know about fires, how might each of the variables related to fires themselves? This might involve looking up each variable quickly on a search engine and getting a better grasp of what it is.

```{r}
#| echo: true
#| message: false

# loading packages and loading the dataset
pacman::p_load(
  tidyverse,
  magrittr,
  extrafont)

ds <- read_csv("forestfires.csv")
```

A single day represents a day and the risk of having a fire on that day

## Task Two

-   Convert the month variable into a categorical variable, and make sure that the months in the data are ordered correctly.
-   Convert the day variable into a categorical variable too. Different regions use different days of the week as the "starting" day, so choose the one that suits you. There's no one correct answer for this one, the processing helps us organize the data in a more familiar way.

Inspection of month variable

```{r}
#| echo: true

ds %>% pull(month) %>% unique()

```

Reordering of the month

```{r}
#| echo: true
ds %<>% 
 mutate(month = fct_relevel(month,"jan","feb","mar","apr","may","jun",
              "jul","aug","sep","oct","nov","dec"))
```

Inspection day variable

```{r}
#| echo: true

ds %>% pull(day) %>% unique()
```

Reordering day variable

```{r}
#| echo: true

ds %<>% 
  mutate(day=fct_relevel(day,"mon","tue","wed",
                         "thu","fri","sat","sun"))
```

> When it comes to understanding forest fires and what can be done to manage them, it is helpful to have an idea of when the fires are most likely to occur. For example, there is a notion of a fire season in the state of California in the United States between May and October, thanks to the summer heat.

We've seen two variables concerning time: month and day. These two columns allow us to ask:

1.  Which months do forest fires happen the most?
2.  Which days of the week do forest fires happen the most?

## Task 3

-   Create a tibble that counts the number of forest fires by month.

    -   In order to count rows, we have a few options on how to calculate this. We can use the `nrow()` function, or we can also use the `n()` function to count the number of rows within `summarize()`.

-   Create a tibble that counts the number of forest fires by day of the week.

-   Using each of the tibbles that you created, create a visualization that allows us to answer the questions that we have put forth on this screen.

-   Using your visualizations, write some notes to yourself on when forest fires are most common. One good practice is to try to accompany a visualization with a bit of writing that describes its key focal points. Even though a visualization should always be able to stand alone, it's helpful to a reader to understand immediately what the point of a graph is.

-   Make sure to give your plot informative axes labels and an accurate title too! All of your plots should be able to describe themselves to an uninformed reader.

### Forest Fires by Month

```{r}
#| echo: true
fires_by_month <- ds %>%
  group_by(month) %>%
  summarize(frequency = n())

knitr::kable(fires_by_month,
             align="cc",
             caption="Forest Fires by Month")
```

-   Most forest fires occur in August as seen in table above and the figure below

A plot showing forest fires by month

```{r}
#| echo: true
#| warning: false
#| message: false
ggplot(ds) +
  aes(x=month) +
  geom_bar() +
  theme_classic() +
  theme(text=element_text(size=12,  family="Palatino")) +
  ylab("Frequency of Fires") +
  xlab("Month")
```

### Forest Fires by Day of the Week

```{r}
#| echo: true
fires_by_day <- ds %>%
  group_by(day) %>%
  summarize(frequency = n())

knitr::kable(fires_by_day,
             align="cc",
             caption="Forest Fires by Day")
```

-   Most forest fires occur on sunday. This is as seen on the table above and the figure below

A plot showing forest fires by day of the week

```{r}
#| echo: true
#| warning: false
#| message: false
ggplot(ds) +
  aes(x=day) +
  geom_bar() +
  theme_classic() +
  theme(text=element_text(size=12,  family="Palatino")) +
  ylab("Frequency of Fires") +
  xlab("Day")
```

From our graphs, we saw that August and September see more forest fires than other months. It also looks as though the weekend days (Friday, Saturday, and Sunday) have more forest fires than days in the middle of the week

To explore the temporal patterns of forest fire occurrence the bar charts reveal, we should look more closely at how the variables that relate to forest fires vary by month and by day of the week. We should see how each of the other variables in the dataset relates to month

## Task Four

Instructions:

-   Create a visualization(s) that help look at the relationship between each of the columns described above with month.
    -   if you want to, do these visualizations again with day to search for if there's any relationships there. Our solutions will only look at month
    -   if you use `facet_wrap()` or `facet_grid()`, make sure you use `scales = "free_y"` to make sure each plot is on its own scale
-   Take note of any variables that show values that stand out in August or September. Knowing what the variables represent, how do you think these relate to the forest fires themselves?

Plotting Other Variables Against Month

```{r}
#| echo: true
#| warning: false
#| message: false
forest_fires_long <- ds %>% 
  pivot_longer(
    cols = c("FFMC", "DMC", "DC", 
             "ISI", "temp", "RH", 
             "wind", "rain"),
    names_to = "data_col",
    values_to = "value"
  )
forest_fires_long %>% 
  ggplot(aes(x = month, y = value)) +
  geom_boxplot() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle=90, hjust=1)) +
  theme(text=element_text(size=12,  family="Palatino")) +
  facet_wrap(vars(data_col), scale = "free_y") +
  labs(
    title = "Variable changes over month",
    x = "Month",
    y = "Variable value"
  )
```

Plotting Other Variables Against Day

```{r}
#| echo: true
#| warning: false
#| message: false

forest_fires_long %>% 
  ggplot(aes(x = day, y = value)) +
  geom_boxplot() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle=90, hjust=1)) +
  theme(text=element_text(size=12,  family="Palatino")) +
  facet_wrap(vars(data_col), scale = "free_y") +
  labs(
    title = "Variable changes over month",
    x = "Day",
    y = "Variable value"
  )
```

So far, we've only looked at the relationship between the variables in the data and the frequency of forest fires. Fires can also range in intensity too, so it might be useful to know what factors influence this as well.

Looking at the data immediately though, there is no variable that describes just "severity". Many times in analysis, we'll be interested in a variable, but simply won't have the data for it. In these cases, we often have to look at proxies, or a kind of "representation" of severity. In this data set, the area variable contains data on the number of hectares of forest that burned during the forest fire. We'll use this variable as an indicator of the severity of the fire. The idea behind using area as a proxy is that worse fires will result in a larger burned area. Of course, this won't be true in all cases, but it is a reasonable assumption to make.

## Task Five

-   Create a visualization(s) that help look at the relationship between of the columns other X,Y,month and day with area.
    -   if you use facet_wrap() or facet_grid(), make sure you use scales = "free_x" to make sure each plot is on its own scale
-   Take note of any variables that show values that stand out in terms of area. Knowing what the variables represent, how do you think these relate to the forest fires themselves?

```{r}
#| echo: true
#| warning: false
#| message: false

forest_fires_long %>% 
  ggplot(aes(x = value, y = area)) +
  geom_point() +
  theme(text=element_text(size=12,  family="Palatino")) +
  theme_minimal() +
  facet_wrap(vars(data_col), scales = "free_x") +
  labs(
    title = "Relationships between other variables and area burned",
    x = "Value of column",
    y = "Area burned (hectare)"
  )
```

It seems that there are two rows where `area` that still hurt the scale of the visualization. Let's make a similar visualization that excludes these observations so that we can better see how each variable relates to `area`.

```{r}
#| echo: true
#| warning: false
#| message: false
forest_fires_long %>% 
  filter(area < 300) %>% 
  ggplot(aes(x = value, y = area)) +
  geom_point() + 
  theme(text=element_text(size=12,  family="Palatino")) +
  theme_minimal() +
  facet_wrap(vars(data_col), scales = "free_x") +
  labs(
    title = "Relationships between other variables and area burned (area < 300)",
    x = "Value of column",
    y = "Area burned (hectare)"
  )
```
