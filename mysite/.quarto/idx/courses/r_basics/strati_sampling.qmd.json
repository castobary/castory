{"title":"Stratified and Cluster Sampling","markdown":{"yaml":{"title":"Stratified and Cluster Sampling","author":"Castory Munishi","date":"11/05/2022","execute":{"echo":true,"warning":false},"format":"revealjs","editor":"visual"},"headingText":"Challenge of Simple Random Sampling","containsRefs":false,"markdown":"\n\n\n\n+ SRS will not always result in a sample having all groups since its completely random\n+ Sometimes we might want to analyze patterns for each possible group\n+ In our example dataset we have five different positions.\n+ F: Foward, G: Guard, C: Center, G/F: Guard/Foward, F/C: Foward/Center\n\n## SRS Missing a category\n\n+ Using SRS we might result in a situation like\n\n![](images/s1m1_srs_down.svg)\n\n## Getting Group Representation\n\n+ Group representation can be obtained by *stratified sampling*\n+ The dataset is organized into different groups\n+ The randomly sample from each group\n+ Each individual stratified group known as a *stratum*\n+ Multiple groups known as *strata*\n\n\n![](images/s1m1_stratified_sampling_v3.svg)\n\n\n## `sample_n()` function\n\n+ Enables sampling rows.\n+ Takes two arguments, the dataset and number of rows to be sampled\n\n```{r}\npacman::p_load(\n  readr,\n  dplyr,\n  ggplot2\n)\n\nds <- read_csv(\"datasets/wnba.csv\")\n\n# getting ten rows\nds_sampled <- sample_n(ds,size=10)\n```\n\n\n## Task 1\n\nCalculate the average age and the average number of games played from a random sample. \n\ni. Designate set.seed(1) to make the results reproducible.\nii. Sample 30 rows from the wnba dataframe. Save the results as thirty_samples.\niii. Calculate the average age of this sample group. Assign the results to mean_age.\niv. Calculate the average number of games played for this sample group. Assign the results to mean_games.\n\n\n## Solution 1\n\n```{r}\nset.seed(1)\nds_30 <- sample_n(ds,size=30)\nmean_age <- mean(ds_30$Age, na.rm=T)\nmean_games <- mean(ds_30$Games_Played, na.rm = T)\n```\n\n+ The mean age is `r mean_age`\n+ The mean number of games `r mean_games`\n\n\n## Creating and Analyzing Strata with dplyr\n\n+ When can use the `group_by()` function to create strata\n+ We can then apply one or more functions for each strata\n\n\n## Getting Mean by Stratum\n\n```{r}\nset.seed(1)\nds %>% \n  # Split: stratify by player position\n  group_by(Pos) %>% \n  # Apply: sample 10 observations for each player position stratum\n  sample_n(10) %>%\n  # Apply & combine: calculate average points scored for each stratum, combine results\n  summarize(mean_pts = mean(PTS))\n```\n\n"},"formats":{"revealjs":{"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","output-file":"strati_sampling.html"},"language":{},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.1.251","auto-stretch":true,"title":"Stratified and Cluster Sampling","author":"Castory Munishi","date":"11/05/2022","editor":"visual"}}}}